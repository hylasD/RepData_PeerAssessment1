getwd()
getwd()
cd
cd()
add2 <- function(x, y) {
x + y
}
add2 (2,3)
cellcount <- function(x, y, z) {
((x+y+z)/3)*2*1000*10
}
cellcount(148,152,145)
cellcount(166,150,170)
Ncell <- function(cellcount, V){
cellcount*V
}
Ncell(6)
Ncell <- function(x,y,z, V){
((x+y+z)/3)*2*1000*10*V
}
Ncell(166,150,170)
Ncell(166,150,170,7)
Ncell(148,152,145,7)
Volume <-function(T, N, v){
T <-Ncell
N =2500000
v/(T/N)
}
Volume(T,N,7)
Volume <-function(T, N, v){
v/(T/N)
}
Volume(2076667,2500000,7)
Volume(20766667,2500000,7)
Volume(22680000,2500000,7)
cellcount(104,103,111)
cellcount(100,110,105)
cellcount(48,63,60)
cellcount(69,65,75)
install.packages("tm")
library("tm", lib.loc="~/Library/R/3.1/library")
library("wordcloud", lib.loc="~/Library/R/3.1/library")
getwd()
setwd("Desktop/R files")
thesis <- Corpus(DirSource("Thesis/"))
thesis <- tm_map(thesis, stripWhitespace)
thesis <- tm_map(thesis, removeWords("SMART"))
thesis <- tm_map(thesis, removeWords, stopwords("SMART"))
thesis <- tm_map(thesis, removeNumbers)
thesis <- tm_map(thesis, removePunctuation, preserve_intra_word_dashes = TRUE)
thesis <- tm_map(thesis, removeWords, "(")
thesis <- tm_map(thesis, stemDocument)
wordcloud(thesis, scale=c(5,0.5), max.words=100, random.order=FALSE, rot.per=0.35, use.r.layout=FALSE, colors=brewer.pal(8, “Dark2″))
wordcloud(thesis, scale=c(5,0.5), max.words=100, random.order=FALSE, rot.per=0.35, use.r.layout=FALSE, colors="black"
)
thesis <- tm_map(thesis, removeWords, "the")
wordcloud(thesis, scale=c(5,0.5), max.words=100, random.order=FALSE, rot.per=0.35, use.r.layout=FALSE, colors="black")
thesis <- tm_map(thesis, removeWords, stopwords("the"))
thesis <- tm_map(thesis, removeWords, ("the"))
wordcloud(thesis, scale=c(5,0.5), max.words=100, random.order=FALSE, rot.per=0.35, use.r.layout=FALSE, colors="black")
thesis <- tm_map(thesis, removeWords, c("the", "studi",))
thesis <- tm_map(thesis, removeWords, c("the", "studi"))
thesis <- tm_map(thesis, stemDocument)
wordcloud(thesis, scale=c(5,0.5), max.words=80, random.order=FALSE, rot.per=0.35, use.r.layout=FALSE, colors="black")
quartz(plot)
quartz("plot")
wordcloud(thesis, scale=c(5,0.5), max.words=80, random.order=FALSE, rot.per=0.35, use.r.layout=FALSE, colors="black")
wordcloud(thesis, scale=c(5,0.5), max.words=50, random.order=FALSE, rot.per=0.35, use.r.layout=FALSE, colors="black")
setwd("Desktop/R files")
thesis <- Corpus(DirSource("Thesis/"))
thesis <- tm_map(thesis, stripWhitespace)
thesis <- tm_map(thesis, removeWords, stopwords("SMART"))
thesis <- tm_map(thesis, removeNumbers)
thesis <- tm_map(thesis, removePunctuation)
thesis <- tm_map(thesis, removeWords, c("the", "signif", "famili","regul", "activ", "increa","mous", "syndrom"))
thesis <- tm_map(thesis, stemDocument)
wordcloud(thesis, scale=c(5,0.5), max.words=100, random.order=FALSE, rot.per=0.35, use.r.layout=FALSE, colors="black)
)
)
quit
end
r
exit
q()
getwd()
thesis <- Corpus(DirSource("Thesis/"))
thesis <- tm_map(thesis, stripWhitespace)
thesis <- tm_map(thesis, removeWords, stopwords("SMART"))
thesis <- tm_map(thesis, removeNumbers)
thesis <- tm_map(thesis, removePunctuation)
thesis <- tm_map(thesis, removeWords, c("the", "signif", "famili","regul", "activ", "increa","mous", "syndrom"))
thesis <- tm_map(thesis, stemDocument)
wordcloud(thesis, scale=c(5,0.5), max.words=100, random.order=FALSE, rot.per=0.35, use.r.layout=FALSE, colors="black")
thesis <- Corpus(DirSource("Thesis/"))
thesis <- tm_map(thesis, stripWhitespace)
thesis <- tm_map(thesis, removeWords, stopwords("SMART"))
thesis <- tm_map(thesis, removeNumbers)
thesis <- tm_map(thesis, removePunctuation)
thesis <- tm_map(thesis, removeWords, c("the", "signif", "famili","regul", "activ", "increa","mous", "syndrom"))
thesis <- tm_map(thesis, stemDocument)
wordcloud(thesis, scale=c(5,0.5), max.words=50, random.order=FALSE, rot.per=0.35, use.r.layout=FALSE, colors="black")
thesis <- Corpus(DirSource("Thesis/"))
thesis <- tm_map(thesis, stripWhitespace)
thesis <- tm_map(thesis, removeWords, stopwords("SMART"))
thesis <- tm_map(thesis, removeNumbers)
thesis <- tm_map(thesis, removePunctuation)
thesis <- tm_map(thesis, removeWords, c("the", "signif", "famili","regul", "activ", "increa","mous", "syndrom"))
thesis <- tm_map(thesis, stemDocument)
wordcloud(thesis, scale=c(10,1), max.words=50, random.order=TRUE, rot.per=0.1, use.r.layout=FALSE, colors="black")
thesis <- Corpus(DirSource("Thesis/"))
thesis <- tm_map(thesis, stripWhitespace)
thesis <- tm_map(thesis, removeWords, stopwords("SMART"))
thesis <- tm_map(thesis, removeNumbers)
thesis <- tm_map(thesis, removePunctuation)
thesis <- tm_map(thesis, removeWords, c("the", "signif", "famili","regul", "activ", "increa","mous", "syndrom"))
thesis <- tm_map(thesis, stemDocument)
wordcloud(thesis, scale=c(1,0.1), max.words=50, random.order=TRUE, rot.per=0.1, use.r.layout=FALSE, colors="black")
thesis <- Corpus(DirSource("Thesis/"))
thesis <- tm_map(thesis, stripWhitespace)
thesis <- tm_map(thesis, removeWords, stopwords("english"))
thesis <- tm_map(thesis, removeNumbers)
thesis <- tm_map(thesis, removePunctuation)
thesis <- tm_map(thesis, removeWords, c("the", "signif", "famili","regul", "activ", "increa","mous", "syndrom"))
thesis <- tm_map(thesis, stemDocument)
wordcloud(thesis, scale=c(5,1), max.words=50, random.order=TRUE, rot.per=0.1, use.r.layout=FALSE, colors="black")
thesis <- Corpus(DirSource("Thesis/"))
thesis <- tm_map(thesis, stripWhitespace)
thesis <- tm_map(thesis, removeWords, stopwords("english"))
thesis <- tm_map(thesis, removeWords, stopwords("SMART"))
##thesis <- tm_map(thesis, removeNumbers)
##thesis <- tm_map(thesis, removePunctuation)
thesis <- tm_map(thesis, removeWords, stopwords(c("the", "signif", "famili","regul", "activ", "increa","mous", "syndrom")))
thesis <- tm_map(thesis, stemDocument)
wordcloud(thesis, scale=c(5,1), max.words=50, random.order=TRUE, rot.per=0.1, use.r.layout=FALSE, colors="black")
thesis <- Corpus(DirSource("Thesis/"))
thesis <- tm_map(thesis, removeWords, c("the", "signif", "famili","regul", "activ", "increa","mous", "syndrom"))
thesis <- tm_map(thesis, stripWhitespace)
thesis <- tm_map(thesis, removeWords, stopwords("english"))
thesis <- tm_map(thesis, removeWords, stopwords("SMART"))
##thesis <- tm_map(thesis, removeNumbers)
##thesis <- tm_map(thesis, removePunctuation)
thesis <- tm_map(thesis, stemDocument)
wordcloud(thesis, scale=c(5,1), max.words=50, random.order=TRUE, rot.per=0.1, use.r.layout=FALSE, colors="black")
thesis <- Corpus(DirSource("Thesis/"))
thesis <- tm_map(thesis, removeWords, c("the",The", "signif", "famili","regul", "activ", "increa","mous", "syndrom"))
thesis <- tm_map(thesis, stripWhitespace)
thesis <- tm_map(thesis, removeWords, stopwords("english"))
thesis <- tm_map(thesis, removeWords, stopwords("SMART"))
##thesis <- tm_map(thesis, removeNumbers)
thesis <- tm_map(thesis, removePunctuation)
thesis <- tm_map(thesis, stemDocument)
wordcloud(thesis, scale=c(5,1), max.words=50, random.order=TRUE, rot.per=0.1, use.r.layout=FALSE, colors="black")
thesis <- Corpus(DirSource("Thesis/"))
thesis <- tm_map(thesis, removeWords, c("the","The", "signif", "famili","regul", "activ", "increa","mous", "syndrom"))
thesis <- tm_map(thesis, stripWhitespace)
thesis <- tm_map(thesis, removeWords, stopwords("english"))
thesis <- tm_map(thesis, removeWords, stopwords("SMART"))
##thesis <- tm_map(thesis, removeNumbers)
thesis <- tm_map(thesis, removePunctuation)
thesis <- tm_map(thesis, stemDocument)
wordcloud(thesis, scale=c(5,1), max.words=50, random.order=TRUE, rot.per=0.1, use.r.layout=FALSE, colors="black")
thesis <- Corpus(DirSource("Thesis/"))
thesis <- tm_map(thesis, removeWords, c("the","The", "signif", "Famili","Regul", "activ", "increa","Mous", "syndrom"))
thesis <- tm_map(thesis, stripWhitespace)
thesis <- tm_map(thesis, removeWords, stopwords("english"))
thesis <- tm_map(thesis, removeWords, stopwords("SMART"))
##thesis <- tm_map(thesis, removeNumbers)
thesis <- tm_map(thesis, removePunctuation)
thesis <- tm_map(thesis, stemDocument)
wordcloud(thesis, scale=c(5,1), max.words=50, random.order=TRUE, rot.per=0.1, use.r.layout=FALSE, colors="black")
thesis <- Corpus(DirSource("Thesis/"))
thesis <- tm_map(thesis, removeWords, c("the","The", "signif", "Famili","Regul", "activ", "increa","Mous", "syndrom"))
thesis <- tm_map(thesis, stripWhitespace)
thesis <- tm_map(thesis, removeWords, stopwords("english"))
thesis <- tm_map(thesis, removeWords, stopwords("SMART"))
##thesis <- tm_map(thesis, removeNumbers)
thesis <- tm_map(thesis, removePunctuation)
thesis <- tm_map(thesis, stemDocument)
wordcloud(thesis, scale=c(5,1), max.words=50, random.order=TRUE, rot.per=0.1, use.r.layout=FALSE, colors="black")
getwd()
setwd("/Users/ddbebek/Desktop/R files/RepData_PeerAssessment1/")
rm(list=ls())
library("rmarkdown", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("markdown", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
df.new$date <- ymd(df.new$date)
df.new <- mutate(df.new, Days=weekdays(date))
df.new <- df.new %>% group_by(interval, Days) %>% summarise(Average=mean(steps))
weekpart <- NULL
for (i in 1:nrow(df.new)) {
data <- df.new[i,]
if (data$Days == "Sunday" | data$Days == "Saturday") {
week <- "weekend"}
else {
week <- "weekday"
}
weekpart <- c(weekpart, week)
}
df.new$Week <- factor(weekpart)
df.new.averaged <- df.new %>% group_by(interval, Week) %>% summarise(Average=mean(Average))
# Make a panel plot containing a time series plot (i.e. type = "l") of the 5-minute interval (x-axis)
# and the average number of steps taken, averaged across all weekday days or weekend days (y-axis).
# See the README file in the GitHub repository to see an example of what this plot should look like using simulated data.
week.activity <- ggplot(df.new.averaged, aes(interval, Average), color=Week)+
geom_line()+
facet_grid(facets=.~Week)+
theme_classic()
week.activity
library(tidyr)
library(dplyr)
library(ggplot2)
library(lubridate)
# Loading and preprocessing the data
df <- tbl_df(read.csv("activity.csv"))
# What is mean total number of steps taken per day?
# For this part of the assignment, you can ignore the missing values in the dataset.
# Calculate the total number of steps taken per day
df.day <- df %>%
group_by(date) %>%
summarise(Day.Sum = sum(steps, na.rm=TRUE))
# Make a histogram of the total number of steps taken each day
histogram <- ggplot(df.day, aes(Day.Sum))+
geom_histogram(binwidth=5000, fill="limegreen")+
theme_classic()
histogram
# Calculate and report the mean and median of the total number of steps taken per day
df.day.summary <- df.day %>%
summarise(Mean.total.steps=mean(Day.Sum, na.rm = TRUE), Median.total.steps=median(Day.Sum, na.rm = TRUE))
# What is the average daily activity pattern?
# Make a time series plot (i.e. type = "l") of the 5-minute interval (x-axis) and the average number of steps taken,
# averaged across all days (y-axis)
df.interval <- df %>%
group_by(interval) %>%
summarise(Interval.Average = mean(steps, na.rm = TRUE))
daily.ac <- ggplot(df.interval, aes(interval, Interval.Average))+
geom_line(color="red")+
theme_classic()
daily.ac
# Which 5-minute interval, on average across all the days in the dataset, contains the maximum number of steps?
interval <- df.interval$interval[which.max(df.interval$Interval.Average)]
# Imputing missing values
# Calculate and report the total number of missing values in the dataset
na <- length(subset(df$steps, is.na(df$steps)==TRUE))
# Devise a strategy for filling in all of the missing values in the dataset.
df.interval <- df %>%
group_by(interval) %>%
summarise(Interval.Average = mean(steps, na.rm = TRUE))
na.values <- numeric()
for (i in 1:nrow(df)) {
data <- df[i,]
if(is.na(data$steps)) {
steps <- subset(df.interval, interval == data$interval)$Interval.Average
} else {steps <- data$steps}
na.values <- c(na.values, steps)
}
# Create a new dataset that is equal to the original dataset but with the missing data filled in.
df.new <- df
df.new$steps <- na.values
# Make a histogram of the total number of steps taken each day
df.day.n <- df.new %>%
group_by(date) %>%
summarise(Day.Sum = sum(steps))
## New histogram
hist2 <-ggplot(df.day.n, aes(Day.Sum))+
geom_histogram(binwidth=5000, fill="limegreen")+
theme_classic()
hist2
## New data is plotted over histogram that ignored NA values from the beginning
hist1<-histogram + geom_histogram(data=df.day.n, aes(Day.Sum), binwidth=5000, fill="red", alpha=0.5)
hist1
# Calculate and report the mean and median total number of steps taken per day.
df.day.summary.n <- df.day.n %>%
summarise(Mean.total.steps=mean(Day.Sum, na.rm = TRUE), Median.total.steps=median(Day.Sum, na.rm = TRUE))
# Do these values differ from the estimates from the first part of the assignment?
print ("Yes they do")
# What is the impact of imputing missing data on the estimates of the total daily number of steps?
print("Mean got increased. Mean and median now have the same values after filling NAs with mean values.")
# Are there differences in activity patterns between weekdays and weekends?
#Create a new factor variable in the dataset with two levels – “weekday” and “weekend” indicating whether a given date is a weekday or weekend day.
df.new$date <- ymd(df.new$date)
df.new <- mutate(df.new, Days=weekdays(date))
df.new <- df.new %>% group_by(interval, Days) %>% summarise(Average=mean(steps))
weekpart <- NULL
for (i in 1:nrow(df.new)) {
data <- df.new[i,]
if (data$Days == "Sunday" | data$Days == "Saturday") {
week <- "weekend"}
else {
week <- "weekday"
}
weekpart <- c(weekpart, week)
}
df.new$Week <- factor(weekpart)
df.new.averaged <- df.new %>% group_by(interval, Week) %>% summarise(Average=mean(Average))
# Make a panel plot containing a time series plot (i.e. type = "l") of the 5-minute interval (x-axis)
# and the average number of steps taken, averaged across all weekday days or weekend days (y-axis).
# See the README file in the GitHub repository to see an example of what this plot should look like using simulated data.
week.activity <- ggplot(df.new.averaged, aes(interval, Average), color=Week)+
geom_line()+
facet_grid(facets=.~Week)+
theme_classic()
week.activity
week.activity <- ggplot(df.new.averaged, aes(interval, Average), color=Week)+
geom_line()+
facet_grid(facets=.~Week)+
labs(title = "Average activity pattern during weekdays and weekends", y = "Average steps", x = "Five minutes intervals during the day")+
theme_classic()
week.activity
hist2 <-ggplot(df.day.n, aes(Day.Sum))+
geom_histogram(binwidth=5000, fill="limegreen")+
labs(title = "Histogram of daily average steps", y = "Average steps")+
theme_classic()
hist2
knit2html("PA1_template.Rmd")
library("knitr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
knit2html("PA1_template.Rmd")
